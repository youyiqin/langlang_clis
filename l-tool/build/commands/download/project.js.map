{"version":3,"sources":["../utils/index.js","../utils/Http.js","../utils/project.js","download/project.js"],"names":["log4js","require","tempdir","os","tmpdir","exitCli","process","exit","getLog4jsInstance","configure","appenders","lxl","type","filename","path","join","categories","default","level","getLogger","saveCertificate","value","Error","confPath","fs","writeFile","err","getCertificate","existsSync","readFileSync","encoding","log","info","console","error","Header","Accept","COURSE_TEST_URL","TAPD_TEST_URL","Http","constructor","timeout","withCredentials","request","option","conf","maxRedirects","instance","axios","create","createRequestOption","referer","headers","Referer","validCourseToken","token","successCallbackFunc","errorCallbackFunc","testUrl","http","client","then","resp","debug","data","status","code","catch","createFileOrDire","_path","callback","dirname","mkdirSync","writeFileSync","recursive","createProjectStructureDirc","projectId","rootPath","getDircStructure","get","htmlString","$","cheerio","load","titleArr","filter","i","el","attr","map","_","e","find","title","pinyinTitle","pinyin","convertToPinyin","Math","random","directoryName","replace","fullDirectoryName","Project","pid","propTypes","PropTypes","string","isRequired"],"mappings":"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","file":"project.js","sourceRoot":"..\\..\\commands","sourcesContent":["import fs from 'fs'\r\nimport os, { type } from 'os'\r\nimport path from 'path'\r\nconst log4js = require('log4js')\r\n// basic vars\r\nconst tempdir = os.tmpdir()\r\n// 通用退出函数\r\nconst exitCli = () => process.exit()\r\n\r\nconst getLog4jsInstance = () => {\r\n  log4js.configure({\r\n    appenders: {\r\n      lxl: { type: 'file', filename: path.join(tempdir, 'lxl.log') }\r\n    },\r\n    categories: { default: { appenders: ['lxl'], level: 'debug' } }\r\n  })\r\n  return log4js.getLogger('lxl')\r\n}\r\n\r\nconst saveCertificate = (type = 'course', value) => {\r\n  if (type !== 'course' && type !== 'tapd') {\r\n    throw new Error('暂不支持的凭证类型')\r\n  }\r\n  const confPath = path.join(tempdir, `${type}.txt`)\r\n  fs.writeFile(confPath, value, (err) => {\r\n    if (err) throw new Error('save certificate failed.')\r\n  })\r\n}\r\n\r\n// get certificate and check valid\r\nconst getCertificate = (type = 'course') => {\r\n  if (type !== 'course' && type !== 'tapd') {\r\n    throw new Error('暂不支持的凭证类型')\r\n  }\r\n  const confPath = path.join(tempdir, `${type}.txt`)\r\n  try {\r\n    if (fs.existsSync(confPath)) {\r\n      return fs.readFileSync(confPath, { encoding: 'utf8' })\r\n    } else {\r\n      log.info('先使用 lxl build init 命令进行初始化再重新运行程序.')\r\n      console.log('先使用 lxl build init 命令进行初始化再重新运行程序.')\r\n      exitCli()\r\n    }\r\n  } catch (error) {\r\n    throw new Error('read certificate failed.')\r\n  }\r\n}\r\n\r\nexport { tempdir, getCertificate, saveCertificate, getLog4jsInstance, exitCli }\r\n","import axios from 'axios'\r\nimport {\r\n  exitCli,\r\n  getCertificate,\r\n  getLog4jsInstance,\r\n  saveCertificate\r\n} from './index'\r\n\r\nconst Header = {\r\n  'User-Agent':\r\n    'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/85.0.4183.121 Safari/537.36',\r\n  Accept: 'application/json, text/plain, */*',\r\n  'Content-Type': 'application/json;charset=UTF-8'\r\n}\r\n\r\nconst COURSE_TEST_URL = 'http://course.suboy.cn/cgi/auth/build/course/list'\r\nconst TAPD_TEST_URL =\r\n  'https://www.tapd.cn/company/participant_projects?from=left_tree2'\r\n\r\nexport default class Http {\r\n  constructor () {\r\n    this.timeout = 6000\r\n    this.withCredentials = true\r\n  }\r\n\r\n  /*\r\n   * option 需要提供 header dict, baseURL\r\n   */\r\n  request (option) {\r\n    const conf = {\r\n      ...option,\r\n      timeout: this.timeout,\r\n      withCredentials: this.withCredentials,\r\n      maxRedirects: 0\r\n    }\r\n    const instance = axios.create(conf)\r\n    return instance\r\n  }\r\n}\r\n\r\nfunction createRequestOption (\r\n  type = 'course',\r\n  referer = 'http://course.suboy.cn/'\r\n) {\r\n  const conf = {\r\n    headers: {\r\n      ...Header,\r\n      [type === 'course' ? 'token' : 'cookie']: getCertificate(type),\r\n      Referer: referer\r\n    }\r\n  }\r\n  return conf\r\n}\r\n\r\nfunction validCourseToken (type, token, successCallbackFunc, errorCallbackFunc) {\r\n  const log = getLog4jsInstance()\r\n  const testUrl = type === 'course' ? COURSE_TEST_URL : TAPD_TEST_URL\r\n  const http = new Http()\r\n  const client = http.request({\r\n    headers: {\r\n      [type === 'course' ? 'token' : 'cookie']: token,\r\n      ...Header\r\n    }\r\n  })\r\n  client[type === 'course' ? 'post' : 'get'](testUrl)\r\n    .then((resp) => {\r\n      log.info('start check token/cookie valid...')\r\n      log.debug(resp.data, resp.status)\r\n      if (resp.data.code == 0 || resp.status == 200) {\r\n        saveCertificate(type, token)\r\n        successCallbackFunc()\r\n      } else {\r\n        errorCallbackFunc(resp.data)\r\n      }\r\n    })\r\n    .catch((err) => errorCallbackFunc(err))\r\n}\r\n\r\nexport { Header, validCourseToken, createRequestOption }\r\n","import fs from 'fs'\r\nimport path from 'path'\r\nimport Http, { createRequestOption } from './Http.js'\r\nimport * as cheerio from 'cheerio'\r\nimport * as pinyin from 'tiny-pinyin'\r\n// import { randomInt } from 'crypto'\r\n// import { exitCli } from './index.js'\r\n\r\n/**\r\n * @param {type} _path 默认路径\r\n * @param {type} type = 文件名/目录名\r\n * @param {type} callback = 回调函数\r\n */\r\nconst createFileOrDire = (_path, type = 'file', callback = null) => {\r\n  if (type === \"file\" && fs.existsSync(path.dirname(_path))) {\r\n    fs.mkdirSync(path.dirname(_path))\r\n  }\r\n  // let newPath = vim\r\n  type === 'file' ? fs.writeFileSync(_path) : fs.mkdirSync(_path, { recursive: true})\r\n  if (callback !== null) callback()\r\n}\r\n\r\n/**\r\n * @param {type} projectId I am argument projectId.按id获取课件项目结构体系,创建目录\r\n * @param {string} rootPath default is current directory\r\n */\r\nconst createProjectStructureDirc = (projectId, rootPath = 'test') => {\r\n  const http = new Http()\r\n  const client = http.request(\r\n    createRequestOption('tapd', 'https://tapd.cn/company/participant_projects')\r\n  )\r\n  const getDircStructure = async () => {\r\n    try {\r\n      const resp = await client.get(\r\n        `https://www.tapd.cn/${projectId}/prong/stories/stories_list`\r\n      )\r\n      const htmlString = resp.data\r\n      const $ = cheerio.load(htmlString)\r\n      const titleArr = $('tr')\r\n        .filter(function (i, el) {\r\n          // this == el\r\n          return $(this)\r\n            .attr('level') === '0'\r\n        })\r\n      // 获取每一小节的标题,创建小节的目录结构\r\n      titleArr.map((_, e) => {\r\n        // 输出获取到的目录\r\n        console.log($(e)\r\n          .find('.name-td')\r\n          .attr('data-editable-value'))\r\n        const title = $(e)\r\n          .find('.name-td')\r\n          .attr('data-editable-value') || 'unknown'\r\n        const pinyinTitle = pinyin.convertToPinyin(`${title}${~~(Math.random() * 9998 + 1000)}`, '', true)\r\n        const directoryName = pinyinTitle.replace(/[,!.。，！]/g, '')\r\n        const fullDirectoryName = path.join(rootPath, directoryName)\r\n        createFileOrDire(path.join(fullDirectoryName, 'static', 'picture', 'jiaoan'), 'directory')\r\n        createFileOrDire(path.join(fullDirectoryName, 'static', 'json'), 'directory')\r\n        createFileOrDire(path.join(fullDirectoryName, 'static', 'mp3'), 'directory')        \r\n      })\r\n    } catch (error) {\r\n      console.log(error)\r\n    }\r\n  }\r\n  getDircStructure()\r\n}\r\n\r\nexport { createProjectStructureDirc }\r\n","import React from 'react'\r\nimport { Text, Box } from 'ink'\r\nimport PropTypes, { number } from 'prop-types'\r\nimport { createProjectStructureDirc } from '../../utils/project.js'\r\ncreateProjectStructureDirc('35381138')\r\n\r\n/// lxl download project --pid=xxx\r\nconst Project = ({ pid }) => {\r\n  return <Text>download project</Text>\r\n}\r\n\r\nProject.propTypes = {\r\n  pid: PropTypes.string.isRequired\r\n}\r\n\r\nexport default Project\r\n"]}