{"version":3,"sources":["../utils/index.js","../utils/Http.js","../utils/svn.js","build/index.js"],"names":["log4js","require","tempdir","os","tmpdir","exitCli","process","exit","getLog4jsInstance","configure","appenders","lxl","type","filename","path","join","categories","default","level","getLogger","saveCertificate","value","Error","confPath","fs","writeFile","err","getCertificate","existsSync","readFileSync","encoding","log","info","console","error","Header","Accept","COURSE_TEST_URL","TAPD_TEST_URL","Http","constructor","timeout","withCredentials","request","option","conf","maxRedirects","instance","axios","create","createRequestOption","referer","customConf","customHeader","headers","Referer","validCourseToken","token","successCallbackFunc","errorCallbackFunc","testUrl","http","client","then","resp","debug","data","status","code","catch","Svn","getBuildType","svnCommands","commands","svnUrlData","url","entry","relativeUrl","buildType","undefined","buildTypeArr","patternString","isValid","some","buildTypeDict","startsWith","Build","basicUrl","errorMsg","setErrorMsg","React","useState","setConf","build","setBuild","setBuildType","showSelect","setShowSelect","courseName","setCourseName","postData","setPostData","handleSelect","item","post","message","onlineLink","setTimeout","items","label","useEffect","buildData","checkConfUrl","buildRequestUrl","tempPostData","env","template","course_name","Object","keys","map","k","propTypes","PropTypes","string","defaultProps"],"mappings":"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","file":"index.js","sourceRoot":"..\\..\\commands","sourcesContent":["import fs from 'fs'\nimport os, { type } from 'os'\nimport path from 'path'\nconst log4js = require('log4js')\n// basic vars\nconst tempdir = os.tmpdir()\n// 通用退出函数\nconst exitCli = () => process.exit()\n\nconst getLog4jsInstance = () => {\n  log4js.configure({\n    appenders: {\n      lxl: { type: 'file', filename: path.join(tempdir, 'lxl.log') }\n    },\n    categories: { default: { appenders: ['lxl'], level: 'debug' } }\n  })\n  return log4js.getLogger('lxl')\n}\n\nconst saveCertificate = (type = 'course', value) => {\n  if (type !== 'course' && type !== 'tapd') {\n    throw new Error('暂不支持的凭证类型')\n  }\n  const confPath = path.join(tempdir, `${type}.txt`)\n  fs.writeFile(confPath, value, (err) => {\n    if (err) throw new Error('save certificate failed.')\n  })\n}\n\n// get certificate and check valid\nconst getCertificate = (type = 'course') => {\n  if (type !== 'course' && type !== 'tapd') {\n    throw new Error('暂不支持的凭证类型')\n  }\n  const confPath = path.join(tempdir, `${type}.txt`)\n  try {\n    if (fs.existsSync(confPath)) {\n      return fs.readFileSync(confPath, { encoding: 'utf8' })\n    } else {\n      log.info('先使用 lxl build init 命令进行初始化再重新运行程序.')\n      console.log('先使用 lxl build init 命令进行初始化再重新运行程序.')\n      exitCli()\n    }\n  } catch (error) {\n    throw new Error('read certificate failed.')\n  }\n}\n\nexport { tempdir, getCertificate, saveCertificate, getLog4jsInstance, exitCli }\n","import axios from 'axios'\nimport {\n  // exitCli,\n  getCertificate,\n  getLog4jsInstance,\n  saveCertificate\n} from './index'\n\nconst Header = {\n  'User-Agent':\n    'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/85.0.4183.121 Safari/537.36',\n  Accept: 'application/json, text/plain, */*',\n  'Content-Type': 'application/json;charset=UTF-8'\n}\n\nconst COURSE_TEST_URL = 'http://course.suboy.cn/cgi/auth/build/course/list'\nconst TAPD_TEST_URL =\n  'https://www.tapd.cn/company/participant_projects?from=left_tree2'\n\nexport default class Http {\n  constructor () {\n    this.timeout = 6000\n    this.withCredentials = true\n  }\n\n  /*\n   * option 需要提供 header dict, baseURL\n   */\n  request (option) {\n    const conf = {\n      ...option,\n      timeout: this.timeout,\n      withCredentials: this.withCredentials,\n      maxRedirects: 0\n    }\n    const instance = axios.create(conf)\n    return instance\n  }\n\n  // createInstance\n}\n\nfunction createRequestOption (\n  type = 'course',\n  referer = 'http://course.suboy.cn/',\n  customConf = {},\n  customHeader = null\n) {\n  const conf = {\n    headers: {\n      ...(customHeader === null ? Header : customHeader),\n      [type === 'course' ? 'token' : 'cookie']: getCertificate(type),\n      Referer: referer\n    },\n    ...customConf\n  }\n  return conf\n}\n\nfunction validCourseToken (type, token, successCallbackFunc, errorCallbackFunc) {\n  const log = getLog4jsInstance()\n  const testUrl = type === 'course' ? COURSE_TEST_URL : TAPD_TEST_URL\n  const http = new Http()\n  const client = http.request({\n    headers: {\n      [type === 'course' ? 'token' : 'cookie']: token,\n      ...Header\n    }\n  })\n  client[type === 'course' ? 'post' : 'get'](testUrl)\n    .then((resp) => {\n      log.info('start check token/cookie valid...')\n      log.debug(resp.data, resp.status)\n      if (resp.data.code === 0 || resp.status === 200) {\n        saveCertificate(type, token)\n        successCallbackFunc()\n      } else {\n        errorCallbackFunc(resp.data)\n      }\n    })\n    .catch((err) => errorCallbackFunc(err))\n}\n\nexport { Header, validCourseToken, createRequestOption }\n","import svnCommands from 'node-svn-ultimate'\nimport { exitCli, getLog4jsInstance } from './index'\n\nexport default class Svn {\n  constructor () {\n    this.log = getLog4jsInstance()\n  }\n\n  static getBuildType (path = '.') {\n    svnCommands.commands.info(path, (err, data) => {\n      if (err) {\n        this.log.error(err)\n        console.log(\n          '无法获取此路径下的svn数据,详情查看temp目录下的lxl.log日志.'\n        )\n        exitCli()\n      }\n      const svnUrlData = {\n        url: data.entry.url,\n        relativeUrl: data.entry['relative-url'],\n        buildType: undefined\n      }\n      const buildTypeArr = [\n        {\n          patternString: '^/egret_game',\n          type: 'egret'\n        },\n        {\n          patternString: '^/langlang_course',\n          type: 'course'\n        },\n        {\n          patternString: '^/cocos_game',\n          type: 'cocos'\n        }\n      ]\n      const isValid = buildTypeArr.some((buildTypeDict) => {\n        if (svnUrlData.relativeUrl.startsWith(buildTypeDict.patternString)) {\n          svnUrlData.buildType = buildTypeDict.type\n        }\n      })\n      if (isValid) return svnUrlData\n      this.log.debug('暂时不支持的svn构建类型,只支持课件/egret/cocos.')\n      console.log('奇怪的路径,svn info 结果是:\\n', data)\n      exitCli()\n    })\n  }\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Text, Box } from 'ink'\nimport Spinner from 'ink-spinner'\nimport Divider from 'ink-divider'\nimport SelectInput from 'ink-select-input'\nimport { getLog4jsInstance, exitCli } from '../../utils'\nimport Http, { createRequestOption } from '../../utils/Http'\nimport Svn from '../../utils/svn'\n\n// init cli client\nconst http = new Http()\n// 成功获取客户端,则表示\nconst client = http.request(createRequestOption()) // default is course type\n// init log4js instance\nconst log = getLog4jsInstance()\n// check token valid\n\n/// 构建指定目录下的课件或者游戏,默认为当前目录\nconst Build = ({ path = '.' }) => {\n  const basicUrl = 'http://course.suboy.cn/cgiss/auth/build/'\n  const [errorMsg, setErrorMsg] = React.useState()\n  const [conf, setConf] = React.useState()\n  const [build, setBuild] = React.useState(null)\n  const [buildType, setBuildType] = React.useState('')\n  const [showSelect, setShowSelect] = React.useState(true)\n  const [courseName, setCourseName] = React.useState('')\n  const [postData, setPostData] = React.useState({})\n  const handleSelect = (item) => {\n    if (item.value === 'exit') exitCli()\n    // 确定继续,执行构建\n    setShowSelect(false)\n    client\n      .post(`${basicUrl}${buildType}/start`, postData)\n      .then((resp) => {\n        if (resp.data.code !== 0) {\n          log.debug(resp.data.message)\n          setErrorMsg(resp.data.message)\n          exitCli()\n        }\n        setBuild({\n          status: 'Success ✔',\n          onlineLink: `http://s.langlangyun.com/c/index.html?name=${courseName}`\n        })\n        setTimeout(exitCli, 500)\n      })\n      .catch((err) => {\n        log.debug(err)\n        setErrorMsg('奇怪的错误,检查日志文件.')\n        setTimeout(exitCli, 500)\n      })\n  }\n  const items = [\n    {\n      label: '确定',\n      value: 'confirm'\n    },\n    {\n      label: '退出',\n      value: 'exit'\n    }\n  ]\n  React.useEffect(() => {\n    // prev check,一定能拿到类型,否则就自动退出了,这里不需要加检查逻辑\n    const buildData = Svn.getBuildType(path)\n    setBuildType(buildData.buildType)\n    const checkConfUrl = `${basicUrl}${buildData.buildType}/conf`\n    const buildRequestUrl = `${basicUrl}${buildData.buildType}/start`\n    // check config, create postData\n    const tempPostData = {\n      env: 'product',\n      url: buildData.url\n    }\n    if (buildData.buildType !== 'course') tempPostData.template = true\n    client\n      .post(checkConfUrl, tempPostData)\n      .then((resp) => {\n        if (resp.data.code !== 0) {\n          log.debug(resp.data.message)\n          setErrorMsg(resp.data.message)\n          exitCli()\n        }\n        setPostData(tempPostData)\n        setConf(resp.data.data)\n        setCourseName(resp.data.data.course_name)\n      })\n      .catch((err) => {\n        log.debug(err)\n        setErrorMsg('奇怪的错误,检查日志文件.')\n        setTimeout(exitCli, 500)\n      })\n  }, [])\n\n  return (\n    <Box flexDirection='column'>\n      <Box>\n        <Text>\n          <Text color='green'>\n            <Spinner type='dots' />\n          </Text>\n          {' start build project.'}\n        </Text>\n      </Box>\n      <Box>\n        {conf ? (\n          <Box flexDirection='column' marginBottom='1'>\n            <Divider title='构建自检,当前配置如下:' />\n            {Object.keys(conf).map((k) => {\n              return (\n                <Box key={k}>\n                  <Text color='magenta'>{k}:</Text>\n                  <Text>&nbsp;&nbsp;&nbsp;&nbsp;</Text>\n                  <Text>{conf[k] === true ? '✔' : conf[k]}</Text>\n                </Box>\n              )\n            })}\n            {showSelect ? (\n              <SelectInput items={items} onSelect={handleSelect} />\n            ) : null}\n          </Box>\n        ) : null}\n      </Box>\n      <Box>\n        {build ? (\n          <Box flexDirection='column' marginBottom='2'>\n            <Divider title='开始构建:' />\n            {Object.keys(build).map((k) => {\n              return (\n                <Box key={`${k}1`}>\n                  <Text>{k}:</Text>\n                  <Text color='green'>{build[k]}</Text>\n                </Box>\n              )\n            })}\n          </Box>\n        ) : null}\n      </Box>\n      {errorMsg ? <Text>{errorMsg}</Text> : null}\n    </Box>\n  )\n}\n\nBuild.propTypes = {\n  path: PropTypes.string\n}\n\nBuild.defaultProps = {\n  path: '.'\n}\n\nexport default Build\n"]}