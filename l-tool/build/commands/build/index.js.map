{"version":3,"sources":["../utils/index.js","../utils/Http.js","../utils/svn.js","build/index.js"],"names":["log4js","require","tempdir","os","tmpdir","exitCli","process","exit","getLog4jsInstance","configure","appenders","lxl","type","filename","path","join","categories","default","level","getLogger","saveCertificate","value","Error","confPath","fs","writeFile","err","getCertificate","existsSync","readFileSync","encoding","log","info","console","error","Header","Accept","COURSE_TEST_URL","TAPD_TEST_URL","Http","constructor","timeout","withCredentials","request","option","conf","maxRedirects","instance","axios","create","createRequestOption","referer","headers","Referer","validCourseToken","token","successCallbackFunc","errorCallbackFunc","testUrl","http","client","then","resp","debug","data","status","code","catch","Svn","getBuildType","svnCommands","commands","svnUrlData","url","entry","relativeUrl","buildType","undefined","buildTypeArr","patternString","isValid","some","buildTypeDict","startsWith","Build","basicUrl","errorMsg","setErrorMsg","React","useState","setConf","build","setBuild","setBuildType","showSelect","setShowSelect","courseName","setCourseName","postData","setPostData","handleSelect","item","post","message","onlineLink","setTimeout","items","label","useEffect","buildData","checkConfUrl","buildRequestUrl","tempPostData","env","template","course_name","Object","keys","map","k","propTypes","PropTypes","string","defaultProps"],"mappings":"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","file":"index.js","sourceRoot":"..\\..\\commands","sourcesContent":["import fs from 'fs'\r\nimport os, { type } from 'os'\r\nimport path from 'path'\r\nconst log4js = require('log4js')\r\n// basic vars\r\nconst tempdir = os.tmpdir()\r\n// 通用退出函数\r\nconst exitCli = () => process.exit()\r\n\r\nconst getLog4jsInstance = () => {\r\n  log4js.configure({\r\n    appenders: {\r\n      lxl: { type: 'file', filename: path.join(tempdir, 'lxl.log') }\r\n    },\r\n    categories: { default: { appenders: ['lxl'], level: 'debug' } }\r\n  })\r\n  return log4js.getLogger('lxl')\r\n}\r\n\r\nconst saveCertificate = (type = 'course', value) => {\r\n  if (type !== 'course' && type !== 'tapd') {\r\n    throw new Error('暂不支持的凭证类型')\r\n  }\r\n  const confPath = path.join(tempdir, `${type}.txt`)\r\n  fs.writeFile(confPath, value, (err) => {\r\n    if (err) throw new Error('save certificate failed.')\r\n  })\r\n}\r\n\r\n// get certificate and check valid\r\nconst getCertificate = (type = 'course') => {\r\n  if (type !== 'course' && type !== 'tapd') {\r\n    throw new Error('暂不支持的凭证类型')\r\n  }\r\n  const confPath = path.join(tempdir, `${type}.txt`)\r\n  try {\r\n    if (fs.existsSync(confPath)) {\r\n      return fs.readFileSync(confPath, { encoding: 'utf8' })\r\n    } else {\r\n      log.info('先使用 lxl build init 命令进行初始化再重新运行程序.')\r\n      console.log('先使用 lxl build init 命令进行初始化再重新运行程序.')\r\n      exitCli()\r\n    }\r\n  } catch (error) {\r\n    throw new Error('read certificate failed.')\r\n  }\r\n}\r\n\r\nexport { tempdir, getCertificate, saveCertificate, getLog4jsInstance, exitCli }\r\n","import axios from 'axios'\r\nimport {\r\n  exitCli,\r\n  getCertificate,\r\n  getLog4jsInstance,\r\n  saveCertificate\r\n} from './index'\r\n\r\nconst Header = {\r\n  'User-Agent':\r\n    'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/85.0.4183.121 Safari/537.36',\r\n  Accept: 'application/json, text/plain, */*',\r\n  'Content-Type': 'application/json;charset=UTF-8'\r\n}\r\n\r\nconst COURSE_TEST_URL = 'http://course.suboy.cn/cgi/auth/build/course/list'\r\nconst TAPD_TEST_URL =\r\n  'https://www.tapd.cn/company/participant_projects?from=left_tree2'\r\n\r\nexport default class Http {\r\n  constructor () {\r\n    this.timeout = 6000\r\n    this.withCredentials = true\r\n  }\r\n\r\n  /*\r\n   * option 需要提供 header dict, baseURL\r\n   */\r\n  request (option) {\r\n    const conf = {\r\n      ...option,\r\n      timeout: this.timeout,\r\n      withCredentials: this.withCredentials,\r\n      maxRedirects: 0\r\n    }\r\n    const instance = axios.create(conf)\r\n    return instance\r\n  }\r\n}\r\n\r\nfunction createRequestOption (\r\n  type = 'course',\r\n  referer = 'http://course.suboy.cn/'\r\n) {\r\n  const conf = {\r\n    headers: {\r\n      ...Header,\r\n      [type === 'course' ? 'token' : 'cookie']: getCertificate(type),\r\n      Referer: referer\r\n    }\r\n  }\r\n  return conf\r\n}\r\n\r\nfunction validCourseToken (type, token, successCallbackFunc, errorCallbackFunc) {\r\n  const log = getLog4jsInstance()\r\n  const testUrl = type === 'course' ? COURSE_TEST_URL : TAPD_TEST_URL\r\n  const http = new Http()\r\n  const client = http.request({\r\n    headers: {\r\n      [type === 'course' ? 'token' : 'cookie']: token,\r\n      ...Header\r\n    }\r\n  })\r\n  client[type === 'course' ? 'post' : 'get'](testUrl)\r\n    .then((resp) => {\r\n      log.info('start check token/cookie valid...')\r\n      log.debug(resp.data, resp.status)\r\n      if (resp.data.code == 0 || resp.status == 200) {\r\n        saveCertificate(type, token)\r\n        successCallbackFunc()\r\n      } else {\r\n        errorCallbackFunc(resp.data)\r\n      }\r\n    })\r\n    .catch((err) => errorCallbackFunc(err))\r\n}\r\n\r\nexport { Header, validCourseToken, createRequestOption }\r\n","import svnCommands from 'node-svn-ultimate'\r\nimport { exitCli, getLog4jsInstance } from './index'\r\n\r\nexport default class Svn {\r\n  constructor () {\r\n    this.log = getLog4jsInstance()\r\n  }\r\n\r\n  static getBuildType (path = '.') {\r\n    svnCommands.commands.info(path, (err, data) => {\r\n      if (err) {\r\n        this.log.error(err)\r\n        console.log(\r\n          '无法获取此路径下的svn数据,详情查看temp目录下的lxl.log日志.'\r\n        )\r\n        exitCli()\r\n      }\r\n      const svnUrlData = {\r\n        url: data.entry.url,\r\n        relativeUrl: data.entry['relative-url'],\r\n        buildType: undefined\r\n      }\r\n      const buildTypeArr = [\r\n        {\r\n          patternString: '^/egret_game',\r\n          type: 'egret'\r\n        },\r\n        {\r\n          patternString: '^/langlang_course',\r\n          type: 'course'\r\n        },\r\n        {\r\n          patternString: '^/cocos_game',\r\n          type: 'cocos'\r\n        }\r\n      ]\r\n      const isValid = buildTypeArr.some((buildTypeDict) => {\r\n        if (svnUrlData.relativeUrl.startsWith(buildTypeDict.patternString)) {\r\n          svnUrlData.buildType = buildTypeDict.type\r\n        }\r\n      })\r\n      if (isValid) return svnUrlData\r\n      this.log.debug('暂时不支持的svn构建类型,只支持课件/egret/cocos.')\r\n      console.log('奇怪的路径,svn info 结果是:\\n', data)\r\n      exitCli()\r\n    })\r\n  }\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Text, Box } from 'ink'\r\nimport Spinner from 'ink-spinner'\r\nimport Divider from 'ink-divider'\r\nimport SelectInput from 'ink-select-input'\r\nimport { getLog4jsInstance, exitCli } from '../../utils'\r\nimport Http, { createRequestOption } from '../../utils/Http'\r\nimport Svn from '../../utils/svn'\r\n\r\n// init cli client\r\nconst http = new Http()\r\n// 成功获取客户端,则表示\r\nconst client = http.request(createRequestOption()) // default is course type\r\n// init log4js instance\r\nconst log = getLog4jsInstance()\r\n// check token valid\r\n\r\n/// 构建指定目录下的课件或者游戏,默认为当前目录\r\nconst Build = ({ path = '.' }) => {\r\n  const basicUrl = 'http://course.suboy.cn/cgiss/auth/build/'\r\n  const [errorMsg, setErrorMsg] = React.useState()\r\n  const [conf, setConf] = React.useState()\r\n  const [build, setBuild] = React.useState(null)\r\n  const [buildType, setBuildType] = React.useState('')\r\n  const [showSelect, setShowSelect] = React.useState(true)\r\n  const [courseName, setCourseName] = React.useState('')\r\n  const [postData, setPostData] = React.useState({})\r\n  const handleSelect = (item) => {\r\n    if (item.value === 'exit') exitCli()\r\n    // 确定继续,执行构建\r\n    setShowSelect(false)\r\n    client\r\n      .post(`${basicUrl}${buildType}/start`, postData)\r\n      .then((resp) => {\r\n        if (resp.data.code !== 0) {\r\n          log.debug(resp.data.message)\r\n          setErrorMsg(resp.data.message)\r\n          exitCli()\r\n        }\r\n        setBuild({\r\n          status: 'Success ✔',\r\n          onlineLink: `http://s.langlangyun.com/c/index.html?name=${courseName}`\r\n        })\r\n        setTimeout(exitCli, 500)\r\n      })\r\n      .catch((err) => {\r\n        log.debug(err)\r\n        setErrorMsg('奇怪的错误,检查日志文件.')\r\n        setTimeout(exitCli, 500)\r\n      })\r\n  }\r\n  const items = [\r\n    {\r\n      label: '确定',\r\n      value: 'confirm'\r\n    },\r\n    {\r\n      label: '退出',\r\n      value: 'exit'\r\n    }\r\n  ]\r\n  React.useEffect(() => {\r\n    // prev check,一定能拿到类型,否则就自动退出了,这里不需要加检查逻辑\r\n    const buildData = Svn.getBuildType(path)\r\n    setBuildType(buildData.buildType)\r\n    const checkConfUrl = `${basicUrl}${buildData.buildType}/conf`\r\n    const buildRequestUrl = `${basicUrl}${buildData.buildType}/start`\r\n    // check config, create postData\r\n    const tempPostData = {\r\n      env: 'product',\r\n      url: buildData.url\r\n    }\r\n    if (buildData.buildType !== 'course') tempPostData.template = true\r\n    client\r\n      .post(checkConfUrl, tempPostData)\r\n      .then((resp) => {\r\n        if (resp.data.code !== 0) {\r\n          log.debug(resp.data.message)\r\n          setErrorMsg(resp.data.message)\r\n          exitCli()\r\n        }\r\n        setPostData(tempPostData)\r\n        setConf(resp.data.data)\r\n        setCourseName(resp.data.data.course_name)\r\n      })\r\n      .catch((err) => {\r\n        log.debug(err)\r\n        setErrorMsg('奇怪的错误,检查日志文件.')\r\n        setTimeout(exitCli, 500)\r\n      })\r\n  }, [])\r\n\r\n  return (\r\n    <Box flexDirection='column'>\r\n      <Box>\r\n        <Text>\r\n          <Text color='green'>\r\n            <Spinner type='dots' />\r\n          </Text>\r\n          {' start build project.'}\r\n        </Text>\r\n      </Box>\r\n      <Box>\r\n        {conf ? (\r\n          <Box flexDirection='column' marginBottom='1'>\r\n            <Divider title='构建自检,当前配置如下:' />\r\n            {Object.keys(conf).map((k) => {\r\n              return (\r\n                <Box key={k}>\r\n                  <Text color='magenta'>{k}:</Text>\r\n                  <Text>&nbsp;&nbsp;&nbsp;&nbsp;</Text>\r\n                  <Text>{conf[k] === true ? '✔' : conf[k]}</Text>\r\n                </Box>\r\n              )\r\n            })}\r\n            {showSelect ? (\r\n              <SelectInput items={items} onSelect={handleSelect} />\r\n            ) : null}\r\n          </Box>\r\n        ) : null}\r\n      </Box>\r\n      <Box>\r\n        {build ? (\r\n          <Box flexDirection='column' marginBottom='2'>\r\n            <Divider title='开始构建:' />\r\n            {Object.keys(build).map((k) => {\r\n              return (\r\n                <Box key={`${k}1`}>\r\n                  <Text>{k}:</Text>\r\n                  <Text color='green'>{build[k]}</Text>\r\n                </Box>\r\n              )\r\n            })}\r\n          </Box>\r\n        ) : null}\r\n      </Box>\r\n      {errorMsg ? <Text>{errorMsg}</Text> : null}\r\n    </Box>\r\n  )\r\n}\r\n\r\nBuild.propTypes = {\r\n  path: PropTypes.string\r\n}\r\n\r\nBuild.defaultProps = {\r\n  path: '.'\r\n}\r\n\r\nexport default Build\r\n"]}